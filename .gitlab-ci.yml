stages:
#   - sonarqube
  - docker-dev
  - deploy-dev
  - deploy-test
  - docker-prd
  - deploy-prd


variables:
  Alert_Service_Name: masa-alert-service
  Alert_Web_Name: masa-alert-web-admin
  AlertWebDockerFile: ./src/Web/Masa.Alert.Web.Admin.Server/Dockerfile
  AlertServiceDockerFile: ./src/Services/Masa.Alert.Service/Dockerfile
  
  NAMESPACE_DEV: alert-dev
  WebDomain_dev: alert-develop.masastack.com
  ServiceDomain_dev: alert-service-develop.masastack.com
  

  Alert_Service_Image: $CI_ALI_REGISTRY_DOMAIN/masa/$Alert_Service_Name:dev-$CI_PIPELINE_ID
  Alert_Web_Image: $CI_ALI_REGISTRY_DOMAIN/masa/$Alert_Web_Name:dev-$CI_PIPELINE_ID

  NAMESPACE_STAGING: alert-staging
  WebDomain_staging: alert-staging.masastack.com
  ServiceDomain_staging: alert-service-staging.masastack.com
  
  # NAMESPACE_PRD: alert
docker-dev:
  stage: docker-dev
  tags:
    - linux-shell
  before_script:
    - docker login -u $CI_ALI_REGISTRY_USER -p $CI_ALI_REGISTRY_PASSWD $CI_ALI_REGISTRY_DOMAIN 
  only:
    - main  
  script:
    - docker build -f $AlertWebDockerFile -t $Alert_Web_Image .
    - docker push $Alert_Web_Image 
    - docker build -f $AlertServiceDockerFile -t $Alert_Service_Image .
    - docker push $Alert_Service_Image
  after_script:
    - docker rmi $Alert_Service_Image   
    - docker rmi $Alert_Web_Image


deploy-dev:
  stage: deploy-dev
  image: registry.cn-hangzhou.aliyuncs.com/masa/library:helm3_latest
  variables:
    EnviromentPath: Develop
  only:
    - main  
  script:
    - ls
    - pwd 
    - echo $EnviromentPath
    - echo $KUBE_CONFIG_DEV_YDY | base64 -d > ./config
    - echo $KUBE_CONFIG_DEV_YDY | base64 -d > $HOME/config
    - cat ./config
    - helm version 
    - helm --kubeconfig ./config list   -n $NAMESPACE_DEV 
    - helm --kubeconfig ./config  upgrade --install $Alert_Service_Name ./charts/masa-service --set ingress.servertype=service   --set domain.name=$ServiceDomain_dev  --set domain.secret=masastack  --set service.port=80  --set environment.path=$EnviromentPath --set image.tag=dev-$CI_PIPELINE_ID -n $NAMESPACE_DEV 
    - helm --kubeconfig ./config  upgrade --install $Alert_Web_Name ./charts/masa-service   --set ingress.servertype=web --set domain.name=$WebDomain_dev  --set domain.secret=masastack  --set service.port=443  --set environment.path=$EnviromentPath --set image.tag=dev-$CI_PIPELINE_ID -n $NAMESPACE_DEV 


deploy-staging:
  stage: deploy-test
  image: registry.cn-hangzhou.aliyuncs.com/masa/library:helm3_latest
  variables:
    EnviromentPath: Staging
  only:
    - main 
  tags:
    - ydy-runner
  script:
    - ls
    - pwd 
    - echo $EnviromentPath
    - echo $KUBE_CONFIG_DEV_YDY | base64 -d > ./config
    - echo $KUBE_CONFIG_DEV_YDY | base64 -d > $HOME/config
    - cat $HOME/config
    - helm version 
    - helm --kubeconfig $HOME/config  list   -n $NAMESPACE_STAGING
    - helm --kubeconfig $HOME/config  upgrade --install $Alert_Service_Name ./charts/masa-service  --set ingress.servertype=service  --set domain.name=$ServiceDomain_staging  --set domain.secret=masastack  --set service.port=80  --set environment.path=$EnviromentPath --set image.tag=dev-$CI_PIPELINE_ID -n $NAMESPACE_STAGING  
    - helm --kubeconfig $HOME/config  upgrade --install $Alert_Web_Name ./charts/masa-service  --set ingress.servertype=web  --set domain.name=$WebDomain_staging  --set domain.secret=masastack  --set service.port=443  --set environment.path=$EnviromentPath --set image.tag=dev-$CI_PIPELINE_ID -n $NAMESPACE_STAGING  


# include: 'devops/**/*.yml'

# stages:
#   - sornarqube
#   - build-docker-image-dev
#   - deploy-dev
#   - deploy-test
#   - deploy-staging
#   - build-docker-image-prd
#   - deploy-prd
#   - rollout-dev
#   - rollout-test
#   - rollout-staging
#   - rollout-prd
# variables: 
#   PRD_REPLICAS: 2

#   DEV_REPLICAS: 1

#   REGISTRY_URL: registry.cn-hangzhou.aliyuncs.com
#   # HARBOR_URL: reg.lonsid.cn
#   REGISTRY_WAREHOUSE: masa

#   K8S_IMAGEPULLSECRETSPULL: aliregistry
#   SECRET_TLS: lonsid-cn

